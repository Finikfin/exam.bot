import logging
from aiogram import types
from config import TEACHER_IDS, TICKET_IMAGES, BIND_TICKET_IMAGES
from models import exam_ticket
from aiogram.utils import markdown as md
from datetime import datetime
from aiogram.types import FSInputFile
from models import ExamTicket, TICKET_IMAGES_COPY
async def start_command_student(message: types.Message):
    await message.answer("üëã–ü—Ä–∏–≤–µ—Ç, —É—á–µ–Ω–∏–∫! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–µ—Ç –±–∏–ª–µ—Ç—ã –Ω–∞ —ç–∫–∑–∞–º–µ–Ω. –ù–∞–ø–∏—à–∏ /ticket, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç.")

async def get_ticket_command_student(message: types.Message):
    if message.from_user.username not in list(BIND_TICKET_IMAGES.values()):
        exam_ticket = ExamTicket()
        random_ticket = exam_ticket.get_random_ticket()
        file = FSInputFile(random_ticket)
        current_time = datetime.now()
        # if current_time < datetime(2024, 12, 27, 10, 30):
        #     await message.answer("–ë–∏–ª–µ—Ç—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–µ —Ä–∞–Ω–µ–µ 10:30 27.12.")
        #     return

        ticket = random_ticket
        await message.answer_photo(photo=file, caption="‚ùï–í–∞—à –±–∏–ª–µ—Ç. –ß—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–∞–ø–∏—à–∏ /consultation, –µ—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞–≤–∞—Ç—å, –Ω–∞–ø–∏—à–∏ /ready. –£–¥–∞—á–∏!")
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
        for teacher_id in TEACHER_IDS:
            caption_text = f"‚ùï@{message.from_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∏–ª–µ—Ç: {ticket}."
            await message.bot.send_photo(chat_id=teacher_id, photo=file, caption=caption_text)
        BIND_TICKET_IMAGES[ticket] = message.from_user.username
        TICKET_IMAGES_COPY.remove(ticket)
    else:
        await message.answer('‚õîÔ∏è–¢—ã —É–∂–µ –≤–∑—è–ª –±–∏–ª–µ—Ç‚õîÔ∏è')

        
async def consultation_command_student(message: types.Message):
    ticket = exam_ticket.get_random_ticket()
    for teacher_id in TEACHER_IDS:
        await message.bot.send_message(teacher_id, md.text(
            f"‚ùï@{message.from_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –±–∏–ª–µ—Ç—É: {ticket}"
        ))
    await message.answer("üïê–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π")

async def ready_command_student(message: types.Message):
    ticket = exam_ticket.get_random_ticket()
    for teacher_id in TEACHER_IDS:
        await message.bot.send_message(teacher_id, md.text(
            f"‚ùï@{message.from_user.username} –≥–æ—Ç–æ–≤ —Å–¥–∞–≤–∞—Ç—å –±–∏–ª–µ—Ç: {ticket}"
        ))
    await message.answer("üïê–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π")

async def get_tickets_command_student(message: types.Message):
    pass